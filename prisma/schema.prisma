generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(50)
  lastName  String   @db.VarChar(50)
  email     String   @unique @db.VarChar(50)
  mobile    String   @db.VarChar(50)
  password  String   @db.VarChar(50)
  otp       String   @db.VarChar(10)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model comments {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(1000)
  userId      Int
  postId      Int

  @@index([postId], map: "comments_postId_fkey")
  @@index([userId], map: "comments_userId_fkey")
}

model news_list {
  id        Int      @id @default(autoincrement())
  title     String
  short_des String
  img1      String
  img2      String
  img3      String
  img4      String
  key_words String
  long_des  String   @db.LongText
  type      String
  catId     Int
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)

  @@index([catId], map: "news_list_catId_fkey")
}

model catagories {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
}

model socials {
  id       Int    @id @default(autoincrement())
  facebook String
  youtube  String
  twitter  String
  linkedin String
  about    String @db.Text
  address  String @db.Text
}

model subscribers {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
}

model polices {
  id       Int    @id @default(autoincrement())
  long_des String @db.LongText
  type     String
}
